theme_bw()
Sys.getlocale()
Sys.setlocale("LC_ALL","Georgian")
Sys.setlocale("LC_ALL","ka_GE.UTF-8")
Sys.setlocale("LC_TIME","ka_GE.UTF-8")
Sys.setlocale("LC_ALL","Georgian")
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date(as.Date("2020-01-01")+weeks(time),locale = "ka_GE"))%>%
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
ylim(0, 1200)+
theme_bw()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date(as.Date("2020-01-01")+weeks(time),locale = "ka_GE"))%>%
View()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date(as.Date("2020-01-01")+weeks(time),locale = "Georgian"))%>%
View()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date(as.Date("2020-01-01")+weeks(time),locale = "Georgian"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
ylim(0, 1200)+
theme_bw()
Sys.setlocale("LC_ALL","English")
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date(as.Date("2020-01-01")+weeks(time),locale = "Georgian"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
ylim(0, 1200)+
theme_bw()
Sys.setlocale("LC_TIME", "German")
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date(as.Date("2020-01-01")+weeks(time),locale = "Georgian"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
ylim(0, 1200)+
theme_bw()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date(as.Date("2020-01-01")+weeks(time),locale = "Georgian"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
ylim(0, 1200)+
theme_bw()
Sys.setlocale("LC_TIME", "Russian")
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date(as.Date("2020-01-01")+weeks(time),locale = "Russian"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
ylim(0, 1200)+
theme_bw()
ylim(0, 1200)+
theme_bw()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date(as.Date("2020-01-01")+weeks(time),locale = "Russian"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
scale_x_datetime(date_labels = "%b %d")+
ylim(0, 1200)+
theme_bw()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date(as.Date("2020-01-01")+weeks(time),locale = "English"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
scale_x_datetime(date_labels = "%b %d")+
ylim(0, 1200)+
theme_bw()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date("2020-01-01")+weeks(time),
week_dates = lubridate::ymd(week_dates,locale = "English"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
scale_x_datetime(date_labels = "%b %d")+
ylim(0, 1200)+
theme_bw()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date("2020-01-01")+weeks(time),
week_dates = lubridate::ymd(week_dates,locale = "English"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
ylim(0, 1200)+
theme_bw()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date("2020-01-01")+weeks(time),
week_dates = lubridate::ymd(week_dates,locale = "Georgian"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
ylim(0, 1200)+
theme_bw()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date("2020-01-01")+weeks(time),
week_dates = lubridate::ymd(week_dates,locale = "ka_GE"))%>%
# View()
ggplot()+
# geom_smooth(aes(period, deaths), method = "gam", alpha=0, size=1, color="red")+
# geom_line(aes(period, deaths_pred), size=1, color="blue")+
# geom_col(aes(period, dif, fill=factor(dif_color)))+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
# geom_text(aes(period, deaths, label=dif))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
ylim(0, 1200)+
theme_bw()
Sys.getlocale("LC_TIME")
Sys.setlocale("LC_ALL","English")
Sys.getlocale("LC_TIME")
Sys.setlocale("LC_ALL","Georgian")
Sys.getlocale("LC_TIME")
Sys.setlocale("LC_ALL","ka_GE.UTF-8")
library(tidyverse)
library(mgcv)
library(lubridate)
setwd("D:\\Dropbox\\My projects\\scratchpad\\covid\\excess_deaths")
weekly_data <- read_csv("https://raw.githubusercontent.com/akarlinsky/world_mortality/main/world_mortality.csv")%>%
filter(country_name == "Georgia")
train <- weekly_data[weekly_data$year < 2020, ] %>%
mutate(period = as.numeric(row.names(.)))
test <- weekly_data[weekly_data$year == 2020, ] %>%
mutate(period = as.numeric(row.names(.)))
pred_ed_mod <- gam(deaths~s(time, bs='cc')+year, data=train, family='poisson')
pred_ed <- predict(pred_ed_mod, type='response', newdata=test) %>%
data.frame()%>%
setNames("deaths_pred")%>%
mutate(time=as.numeric(row.names(.)),
year=2020,
deaths_pred=round(deaths_pred, 0))
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date("2020-01-01")+weeks(time),
dif_color = factor(dif_color, levels=c(1, 2), labels=c("პროგნოზირებული", "ემპირიული"))
)%>%
ggplot()+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
annotate("rect", xmin=as.Date("2020-03-31"), xmax=as.Date("2020-05-23"), ymin=-Inf, ymax=Inf,
alpha=.3, fill="lightblue")+
annotate("text", x=as.Date("2020-04-27"), y=600, label="საგანგებო მდგომარეობა")+
scale_x_date(date_labels = "%m")+
ylim(0, 1200)+
theme_bw()+
labs(
title = "ჭარბი სიკვდილიანობა, 2020 წლის იანვარი-ივლისი",
y = "სიკვდილიანობა",
x = "თვეები")+
theme(
legend.position = "none",
axis.title.x = element_blank()
)
install.packages("ragg")
library(tidyverse)
library(mgcv)
library(lubridate)
library(ragg)
setwd("D:\\Dropbox\\My projects\\scratchpad\\covid\\excess_deaths")
weekly_data <- read_csv("https://raw.githubusercontent.com/akarlinsky/world_mortality/main/world_mortality.csv")%>%
filter(country_name == "Georgia")
train <- weekly_data[weekly_data$year < 2020, ] %>%
mutate(period = as.numeric(row.names(.)))
test <- weekly_data[weekly_data$year == 2020, ] %>%
mutate(period = as.numeric(row.names(.)))
pred_ed_mod <- gam(deaths~s(time, bs='cc')+year, data=train, family='poisson')
pred_ed <- predict(pred_ed_mod, type='response', newdata=test) %>%
data.frame()%>%
setNames("deaths_pred")%>%
mutate(time=as.numeric(row.names(.)),
year=2020,
deaths_pred=round(deaths_pred, 0))
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date("2020-01-01")+weeks(time),
dif_color = factor(dif_color, levels=c(1, 2), labels=c("პროგნოზირებული", "ემპირიული"))
)%>%
ggplot()+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
annotate("rect", xmin=as.Date("2020-03-31"), xmax=as.Date("2020-05-23"), ymin=-Inf, ymax=Inf,
alpha=.3, fill="lightblue")+
annotate("text", x=as.Date("2020-04-27"), y=600, label="საგანგებო მდგომარეობა")+
scale_x_date(date_labels = "%m")+
ylim(0, 1200)+
theme_bw()+
labs(
title = "ჭარბი სიკვდილიანობა, 2020 წლის იანვარი-ივლისი",
y = "სიკვდილიანობა",
x = "თვეები")+
theme(
legend.position = "none",
axis.title.x = element_blank()
)
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date("2020-01-01")+weeks(time),
dif_color = factor(dif_color, levels=c(1, 2), labels=c("პროგნოზირებული", "ემპირიული"))
)%>%
ggplot()+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
annotate("rect", xmin=as.Date("2020-03-31"), xmax=as.Date("2020-05-23"), ymin=-Inf, ymax=Inf,
alpha=.3, fill="lightblue")+
annotate("text", x=as.Date("2020-04-27"), y=600, label="საგანგებო მდგომარეობა", family="Fira Code")+
scale_x_date(date_labels = "%m")+
ylim(0, 1200)+
theme_bw()+
labs(
title = "ჭარბი სიკვდილიანობა, 2020 წლის იანვარი-ივლისი",
y = "სიკვდილიანობა",
x = "თვეები")+
theme(
legend.position = "none",
axis.title.x = element_blank()
)
library(systemfonts)
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date("2020-01-01")+weeks(time),
dif_color = factor(dif_color, levels=c(1, 2), labels=c("პროგნოზირებული", "ემპირიული"))
)%>%
ggplot()+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
annotate("rect", xmin=as.Date("2020-03-31"), xmax=as.Date("2020-05-23"), ymin=-Inf, ymax=Inf,
alpha=.3, fill="lightblue")+
annotate("text", x=as.Date("2020-04-27"), y=600, label="საგანგებო მდგომარეობა", family="Fira Code")+
scale_x_date(date_labels = "%m")+
ylim(0, 1200)+
theme_bw()+
labs(
title = "ჭარბი სიკვდილიანობა, 2020 წლის იანვარი-ივლისი",
y = "სიკვდილიანობა",
x = "თვეები")+
theme(
legend.position = "none",
axis.title.x = element_blank()
)
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date("2020-01-01")+weeks(time),
dif_color = factor(dif_color, levels=c(1, 2), labels=c("პროგნოზირებული", "ემპირიული"))
)%>%
ggplot()+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
annotate("rect", xmin=as.Date("2020-03-31"), xmax=as.Date("2020-05-23"), ymin=-Inf, ymax=Inf,
alpha=.3, fill="lightblue")+
annotate("text", x=as.Date("2020-04-27"), y=600, label="საგანგებო მდგომარეობა", family="BPG Excelsior Caps")+
scale_x_date(date_labels = "%m")+
ylim(0, 1200)+
theme_bw()+
labs(
title = "ჭარბი სიკვდილიანობა, 2020 წლის იანვარი-ივლისი",
y = "სიკვდილიანობა",
x = "თვეები")+
theme(
legend.position = "none",
axis.title.x = element_blank()
)
library(extrafont)
loadfonts()
weekly_data %>%
filter(year==2020)%>%
# mutate(weeks=paste0(year, stringi::stri_pad_left(time, 2, 0)))%>%
left_join(pred_ed, by=c("year", "time"))%>%
mutate(period=as.numeric(row.names(.)),
dif = deaths-deaths_pred,
dif_color = ifelse(dif>=0, 1, 2),
week_dates=as.Date("2020-01-01")+weeks(time),
dif_color = factor(dif_color, levels=c(1, 2), labels=c("პროგნოზირებული", "ემპირიული"))
)%>%
ggplot()+
geom_segment(aes(y=deaths, yend=deaths_pred, x=week_dates, xend=week_dates, color=factor(dif_color)),
size=2, alpha=0.5)+
scale_color_manual(values=c("red", "blue"))+
geom_point(aes(week_dates, deaths), color="red", size=2)+
geom_point(aes(week_dates, deaths_pred), color="blue", size=2)+
annotate("rect", xmin=as.Date("2020-03-31"), xmax=as.Date("2020-05-23"), ymin=-Inf, ymax=Inf,
alpha=.3, fill="lightblue")+
annotate("text", x=as.Date("2020-04-27"), y=600, label="საგანგებო მდგომარეობა", family="BPG Excelsior Caps")+
scale_x_date(date_labels = "%m")+
ylim(0, 1200)+
theme_bw()+
labs(
title = "ჭარბი სიკვდილიანობა, 2020 წლის იანვარი-ივლისი",
y = "სიკვდილიანობა",
x = "თვეები")+
theme(
legend.position = "none",
axis.title.x = element_blank()
)
